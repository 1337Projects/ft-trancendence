
server {
    listen 80;
    server_name localhost;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server block
server {
    client_max_body_size 20M;
    access_log off;

    listen 443 ssl;
    server_name localhost;

    # SSL configuration (Ensure you place the correct certificate files)
    ssl_certificate /app/certificate.crt;
    ssl_certificate_key /app/prv_certificate.crt;

    modsecurity on;
    modsecurity_rules_file /etc/modsecurity/modsecurity.conf;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:EECDH+AESGCM:EDH+AESGCM';
    
    ssl_prefer_server_ciphers off;

    root /app/fr;
    index index.html;


    # Proxy to backend
    location /api {
        proxy_pass http://back_end:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Timeout settings
        proxy_read_timeout 90s;
        proxy_connect_timeout 90s;
        proxy_send_timeout 90s;
    }

    location /wss/ {
        proxy_pass http://back_end:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /media/
    {
        client_max_body_size 2M;
        proxy_pass http://back_end:8000/media/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        try_files $uri $uri/ /index.html;
    }
  
}


services:
  db:
    container_name: data_base
    image: postgres:17-alpine
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ft_transcendence

  be:
    container_name: back_end
    build: ./srcs/Back_end/.
    image: back-end:ipman
    restart: always
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ${PWD}/srcs/Back_end:/app
      # - serverFiles:/app/media
    networks:
      - ft_transcendence
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/auth/login"]
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 20s
    environment:
      - API_URL=https://${HOSTNAME}:1024/
      - EMOJIES_API=https://emoji-api.com/
      - EMOJIES_KEY=access_key=64cbbf2e3c845a7633199a3004eefb71c5eaf31a


  nginx:
    container_name: nginx
    image: nginx:ipman
    build: ./srcs/nginx/.
    restart: always
    ports:
      - "8080:80"
      - "1024:443"
    # volumes:
      # - serverFiles:/server_files
    networks:
      - ft_transcendence
    depends_on:
      - be
    environment:
      - WAIT_FOR_IT_TIMEOUT=60



volumes:
  pgdata:
  serverFiles:

networks:
  ft_transcendence:
    driver: bridge
